[{"path":"https://reckziegel.github.io/uncover/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Bernardo Reckizegel Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://reckziegel.github.io/uncover/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernardo Reckziegel. Maintainer.","code":""},{"path":"https://reckziegel.github.io/uncover/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reckziegel B (2022). uncover: Distributional Historical estimation \"invariant\"\" time-series. R package version 0.1.0, https://reckziegel.github.io/uncover/.","code":"@Manual{,   title = {uncover: Distributional and Historical estimation of \"invariant\"\" time-series},   author = {Bernardo Reckziegel},   year = {2022},   note = {R package version 0.1.0},   url = {https://reckziegel.github.io/uncover/}, }"},{"path":[]},{"path":"https://reckziegel.github.io/uncover/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Distributional and Historical estimation of ","text":"can install development version uncover GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Reckziegel/uncover\")"},{"path":"https://reckziegel.github.io/uncover/reference/fit_ghd.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Generalized Hyperbolic Distribution — fit_ghd","title":"Estimation of the Generalized Hyperbolic Distribution — fit_ghd","text":"function wrapper around fit.ghypuv fit.ghypmv, performs maximum likelihood estimation generalized hyperbolic distribution.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_ghd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Generalized Hyperbolic Distribution — fit_ghd","text":"","code":"fit_ghd(.invariant, .symmetric = FALSE)  # S3 method for default fit_ghd(.invariant, .symmetric = FALSE)  # S3 method for tbl fit_ghd(.invariant, .symmetric = FALSE)  # S3 method for xts fit_ghd(.invariant, .symmetric = FALSE)  # S3 method for matrix fit_ghd(.invariant, .symmetric = FALSE)  # S3 method for numeric fit_ghd(.invariant, .symmetric = FALSE)"},{"path":"https://reckziegel.github.io/uncover/reference/fit_ghd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Generalized Hyperbolic Distribution — fit_ghd","text":".invariant tabular data structure. .symmetric flag. estimated distribution symmetric? Defaults FALSE.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_ghd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Generalized Hyperbolic Distribution — fit_ghd","text":"object class mle.ghyp.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/fit_ghd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Generalized Hyperbolic Distribution — fit_ghd","text":"","code":"##### fit_ghd #####  x <- matrix(diff(log(EuStockMarkets)), ncol = 4)  fit_ghd(x) # multivariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       4 #> AIC:             -56122.36 #> Log-Likelihood:  28081.18 #> Model:           Asymmetric Generalized Hyperbolic  fit_ghd(x[ , 3, drop = FALSE]) # univariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       1 #> AIC:             -11563.82 #> Log-Likelihood:  5786.912 #> Model:           Asymmetric Generalized Hyperbolic"},{"path":"https://reckziegel.github.io/uncover/reference/fit_hyp.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Hyperbolic Distribution — fit_hyp","title":"Estimation of the Hyperbolic Distribution — fit_hyp","text":"function wrapper around fit.hypuv fit.hypmv, performs maximum likelihood estimation hyperbolic distribution.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_hyp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Hyperbolic Distribution — fit_hyp","text":"","code":"fit_hyp(.invariant, .symmetric = FALSE)  # S3 method for default fit_hyp(.invariant, .symmetric = FALSE)  # S3 method for tbl fit_hyp(.invariant, .symmetric = FALSE)  # S3 method for xts fit_hyp(.invariant, .symmetric = FALSE)  # S3 method for matrix fit_hyp(.invariant, .symmetric = FALSE)  # S3 method for numeric fit_hyp(.invariant, .symmetric = FALSE)"},{"path":"https://reckziegel.github.io/uncover/reference/fit_hyp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Hyperbolic Distribution — fit_hyp","text":".invariant tabular data structure. .symmetric flag. estimated distribution symmetric? Defaults FALSE.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_hyp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Hyperbolic Distribution — fit_hyp","text":"object class mle.ghyp.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/fit_hyp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Hyperbolic Distribution — fit_hyp","text":"","code":"##### fit_hyp #####  x <- matrix(diff(log(EuStockMarkets)), ncol = 4)  fit_hyp(x) # multivariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       4 #> AIC:             -52714.94 #> Log-Likelihood:  26376.47 #> Model:           Asymmetric Hyperbolic  fit_hyp(x[ , 4, drop = FALSE]) # univariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       1 #> AIC:             -12784.62 #> Log-Likelihood:  6396.311 #> Model:           Asymmetric Hyperbolic"},{"path":"https://reckziegel.github.io/uncover/reference/fit_nig.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Normal-Inverse Gaussian Distribution — fit_nig","title":"Estimation of the Normal-Inverse Gaussian Distribution — fit_nig","text":"function wrapper around fit.NIGuv fit.NIGmv, performs maximum likelihood estimation Normal-Inverse Gaussian (NIG) distribution.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_nig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Normal-Inverse Gaussian Distribution — fit_nig","text":"","code":"fit_nig(.invariant, .symmetric = FALSE)  # S3 method for default fit_nig(.invariant, .symmetric = FALSE)  # S3 method for tbl fit_nig(.invariant, .symmetric = FALSE)  # S3 method for xts fit_nig(.invariant, .symmetric = FALSE)  # S3 method for matrix fit_nig(.invariant, .symmetric = FALSE)  # S3 method for numeric fit_nig(.invariant, .symmetric = FALSE)"},{"path":"https://reckziegel.github.io/uncover/reference/fit_nig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Normal-Inverse Gaussian Distribution — fit_nig","text":".invariant tabular data structure. .symmetric flag. estimated distribution symmetric? Defaults FALSE.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_nig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Normal-Inverse Gaussian Distribution — fit_nig","text":"object class mle.ghyp.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/fit_nig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Normal-Inverse Gaussian Distribution — fit_nig","text":"","code":"##### fit_nig #####  x <- matrix(diff(log(EuStockMarkets)), ncol = 4)  fit_nig(x) # multivariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       4 #> AIC:             -52708.2 #> Log-Likelihood:  26373.1 #> Model:           Asymmetric Normal Inverse Gaussian  fit_nig(x[ , 4, drop = FALSE]) # univariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       1 #> AIC:             -12786.8 #> Log-Likelihood:  6397.4 #> Model:           Asymmetric Normal Inverse Gaussian"},{"path":"https://reckziegel.github.io/uncover/reference/fit_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Normal Distribution — fit_normal","title":"Estimation of the Normal Distribution — fit_normal","text":"Performs maximum likelihood estimation normal distribution (univariate multivariate). Wrappers fit.gaussuv fit.gaussmv.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Normal Distribution — fit_normal","text":"","code":"fit_normal(x)  # S3 method for default fit_normal(x)  # S3 method for tbl fit_normal(x)  # S3 method for xts fit_normal(x)  # S3 method for matrix fit_normal(x)  # S3 method for numeric fit_normal(x)"},{"path":"https://reckziegel.github.io/uncover/reference/fit_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Normal Distribution — fit_normal","text":"x tabular (non-tidy) data structure.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Normal Distribution — fit_normal","text":"list class cma_fit 21 components.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/fit_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Normal Distribution — fit_normal","text":"","code":"x <- matrix(diff(log(EuStockMarkets)), ncol = 4)  # multivariate estimation fit_normal(x) #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       4 #> AIC:             -52109.52 #> Log-Likelihood:  26061.76 #> Model:           Gaussian  # univariate estimation fit_normal(x[ , 4, drop = FALSE]) #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       1 #> AIC:             -12692.76 #> Log-Likelihood:  6348.378 #> Model:           Gaussian"},{"path":"https://reckziegel.github.io/uncover/reference/fit_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Student-t Distribution — fit_t","title":"Estimation of the Student-t Distribution — fit_t","text":"function wrapper around fit.tuv fit.tmv, performs maximum likelihood estimation Student-t distribution.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Student-t Distribution — fit_t","text":"","code":"fit_t(.invariant, .symmetric = FALSE)  # S3 method for default fit_t(.invariant, .symmetric = FALSE)  # S3 method for tbl fit_t(.invariant, .symmetric = FALSE)  # S3 method for xts fit_t(.invariant, .symmetric = FALSE)  # S3 method for matrix fit_t(.invariant, .symmetric = FALSE)  # S3 method for numeric fit_t(.invariant, .symmetric = FALSE)"},{"path":"https://reckziegel.github.io/uncover/reference/fit_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Student-t Distribution — fit_t","text":".invariant tabular data structure. .symmetric flag. estimated distribution symmetric? Defaults FALSE.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Student-t Distribution — fit_t","text":"object class mle.ghyp.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/fit_t.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Student-t Distribution — fit_t","text":"","code":"##### fit_t #####  x <- matrix(diff(log(EuStockMarkets)), ncol = 4)  fit_t(x) # multivariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       4 #> AIC:             -52711.16 #> Log-Likelihood:  26374.58 #> Model:           Asymmetric Student-t  fit_t(x[ , 4, drop = FALSE]) # univariate estimation #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       1 #> AIC:             -12791.05 #> Log-Likelihood:  6399.524 #> Model:           Asymmetric Student-t"},{"path":"https://reckziegel.github.io/uncover/reference/fit_vg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Variance-Gamma Distribution — fit_vg","title":"Estimation of the Variance-Gamma Distribution — fit_vg","text":"function wrapper around fit.VGuv fit.VGmv, performs maximum likelihood estimation Variance-Gamma (VG) distribution.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_vg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Variance-Gamma Distribution — fit_vg","text":"","code":"fit_vg(.invariant, .symmetric = FALSE)  # S3 method for default fit_vg(.invariant, .symmetric = FALSE)  # S3 method for tbl fit_vg(.invariant, .symmetric = FALSE)  # S3 method for xts fit_vg(.invariant, .symmetric = FALSE)  # S3 method for matrix fit_vg(.invariant, .symmetric = FALSE)  # S3 method for numeric fit_vg(.invariant, .symmetric = FALSE)"},{"path":"https://reckziegel.github.io/uncover/reference/fit_vg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Variance-Gamma Distribution — fit_vg","text":".invariant tabular data structure. .symmetric flag. estimated distribution symmetric? Defaults FALSE.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/fit_vg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Variance-Gamma Distribution — fit_vg","text":"object class mle.ghyp.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/fit_vg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Variance-Gamma Distribution — fit_vg","text":"","code":"##### fit_vg #####  x <- matrix(diff(log(EuStockMarkets)), ncol = 4)  fit_vg(x) # multivariate estimation #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> Warning: Singularity: Some standardized observations are close to 0 (<  2.220446E-16)! #> Observations set to  2.220446E-16. #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       4 #> AIC:             -54375.43 #> Log-Likelihood:  27206.72 #> Model:           Asymmetric Variance Gamma  fit_vg(x[ , 4, drop = FALSE]) # univariate estimation #> Singularity (x-mu)==0: Interpolate with splines. #> Singularity (x-mu)==0: Interpolate with splines. #> Singularity (x-mu)==0: Interpolate with splines. #> Singularity (x-mu)==0: Interpolate with splines. #> <list_of<double>[21]> #> Converged:       TRUE #> Dimension:       1 #> AIC:             -12783.01 #> Log-Likelihood:  6395.503 #> Model:           Asymmetric Variance Gamma"},{"path":"https://reckziegel.github.io/uncover/reference/new_uncover_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to create a prayer fit class. — new_uncover_fit","title":"Internal function to create a prayer fit class. — new_uncover_fit","text":"Internal function create prayer fit class.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/new_uncover_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to create a prayer fit class. — new_uncover_fit","text":"","code":"new_uncover_fit(x, ...)  # S3 method for uncover_fit obj_print_data(x, ...)"},{"path":"https://reckziegel.github.io/uncover/reference/new_uncover_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to create a prayer fit class. — new_uncover_fit","text":"x fitted object ... arguments passed attributes","code":""},{"path":"https://reckziegel.github.io/uncover/reference/new_uncover_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to create a prayer fit class. — new_uncover_fit","text":"list prayer_fit class.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ffp bootstrap_scenarios, ffp_moments","code":""},{"path":"https://reckziegel.github.io/uncover/reference/reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution Selection with AIC Criterion — reveal","title":"Distribution Selection with AIC Criterion — reveal","text":"Performs maximum likelihood estimation univariate multivariate generalized hyperbolic distributions reorder fitted models based AIC information criterion. wrapper around stepAIC.ghyp.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution Selection with AIC Criterion — reveal","text":"","code":"reveal(.invariant, .silent = TRUE, ...)  # S3 method for default reveal(.invariant, .silent = TRUE, ...)  # S3 method for tbl_df reveal(.invariant, .silent = TRUE, ...)  # S3 method for xts reveal(.invariant, .silent = TRUE, ...)  # S3 method for matrix reveal(.invariant, .silent = TRUE, ...)"},{"path":"https://reckziegel.github.io/uncover/reference/reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distribution Selection with AIC Criterion — reveal","text":".invariant univariate multivariate tabular (non-tidy) time-series. .silent logical. optimization results printed? default TRUE. ... Additional arguments user may want pass fit.ghypuv.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/reveal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution Selection with AIC Criterion — reveal","text":"tibble fitted parameters: 11 rows 8 columns.","code":""},{"path":"https://reckziegel.github.io/uncover/reference/reveal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distribution Selection with AIC Criterion — reveal","text":"Pfaff, Bernhard. Financial risk modelling portfolio optimization R. John Wiley & Sons, 2016.","code":""},{"path":[]},{"path":"https://reckziegel.github.io/uncover/reference/reveal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distribution Selection with AIC Criterion — reveal","text":"","code":"x <- matrix(diff(log(EuStockMarkets)), ncol = 4) colnames(x) <- colnames(EuStockMarkets)  reveal(x) #> Currently fitting: asymmetric ghyp  #> Currently fitting: asymmetric hyp  #> Currently fitting: asymmetric NIG  #> Currently fitting: asymmetric VG  #> Currently fitting: asymmetric t  #> Currently fitting: symmetric ghyp  #> Currently fitting: symmetric hyp  #> Currently fitting: symmetric NIG  #> Currently fitting: symmetric VG  #> Currently fitting: symmetric t  #> Currently fitting: gauss #> # A tibble: 11 × 8 #>    model symmetric lambda  alpha.bar     aic    llh converged n.iter #>    <chr> <lgl>      <dbl>      <dbl>   <dbl>  <dbl> <lgl>      <dbl> #>  1 ghyp  FALSE      0.655   6.33e-14 -56122. 28081. TRUE          39 #>  2 ghyp  TRUE       0.654   4.35e-13 -55847. 27940. TRUE          39 #>  3 VG    FALSE      0.655   0        -54375. 27207. TRUE          23 #>  4 VG    TRUE       0.654   0        -54369. 27200. TRUE          24 #>  5 hyp   TRUE       2.5     2.58e- 7 -52721. 26375. TRUE           9 #>  6 hyp   FALSE      2.5     9.00e- 8 -52715. 26376. TRUE          18 #>  7 t     TRUE      -3.08    0        -52711. 26371. TRUE          63 #>  8 t     FALSE     -3.10    0        -52711. 26375. TRUE          64 #>  9 NIG   FALSE     -0.5     1.87e+ 0 -52708. 26373. TRUE          37 #> 10 NIG   TRUE      -0.5     1.85e+ 0 -52708. 26369. TRUE          36 #> 11 gauss TRUE      NA     Inf        -52096. 26062. TRUE           0"}]
